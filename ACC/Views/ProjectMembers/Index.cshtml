@using ACC.ViewModels.MemberVM.MemberVM
@using ACC.ViewModels.ProjectMembersVM

@{
    int pageSize = ViewBag.PageSize;
    int currentPage = ViewBag.Page;
    int totalItems = ViewBag.TotalItems;
    int totalPages = (int)Math.Ceiling((double)totalItems / pageSize);
    Layout = "_ProjectLayout";
    int ProjId = ViewBag.ProjId;
    var CurrentUserId = UserManager.GetUserId(User);
    bool hasAdminAccess = UserRoleService.HasGlobalAccess(CurrentUserId, GlobalAccessLevels.AccountAdmin) ||
                          UserRoleService.HasProjectAccess(CurrentUserId, ProjId, ProjectAccessLevels.ProjectAdmin);
    string searchQuery = ViewBag.Search as string ?? "";


}
<script>
    const hasAdminAccess = @hasAdminAccess.ToString().ToLower();
</script>



@model List<ProjectMembersVM>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <title>Account Members</title>
    <link href="/css/site.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css">
</head>
<body>
    <div class="d-flex">
        <div class="container-fluid p-4">
            <h2>Account Members</h2>
                <div class="d-flex justify-content-between my-3">
                    @if (hasAdminAccess)
                    {
                            <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addMemberModal">+ Add members</button>
                    }
                    <div class="d-flex">
                    <form method="get" class="d-flex" >
                              <input type="text" class="form-control me-2" name="search" placeholder="Search by name" value="@searchQuery" />
                              <input type="hidden" name="ProjectId" value="@ProjId" />
                              <button type="submit" class="btn btn-primary">Search</button>
                    </form>
                    </div>
                </div>

            <table class="table table-bordered" id="membersTable">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Company</th>
                        <th>Role</th>
                        <th>Access Level</th>
                        <th>Added On</th>
                        @if (hasAdminAccess)
                        {
                            <th><i class="fas fa-cog"></i></th>

                        }
                    </tr>
                </thead>
                <tbody id="membersTableBody">
                    @foreach (var member in Model)
                    {
                        <tr id="row-@member.Id" class="member-row" data-id="@member.Id">
                            <td>@member.Name</td>
                            <td>@member.Company</td>
                            <td>@member.Position</td>
                            <td>@member.ProjectAccessLevel</td>
                            <td>@member.AddedOn</td>
                            @if (hasAdminAccess)
                            {
                                <td>
                                    <div class="action-btn">
                                        <button class="btn btn-light btn-sm toggle-menu">
                                            <i class="bi bi-three-dots-vertical"></i>
                                        </button>
                                        <div class="action-menu">
                                            <button class="delete-btn" data-id="@member.Id" data-projectid="@ProjId">Delete</button>

                                        </div>
                                    </div>
                                </td>
                            }
                        </tr>
                    }
                </tbody>
            </table>

            <!-- Pagination Controls -->
            <div class="d-flex justify-content-center align-items-center mt-3">
                <nav>
                    <ul class="pagination">
                        <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                            <a class="page-link" href="?page=@(currentPage - 1)&search=@searchQuery">Previous</a>
                        </li>
                        @for (int i = 1; i <= totalPages; i++)
                        {
                            <li class="page-item @(i == currentPage ? "active" : "")">
                                <a class="page-link" href="?page=@i&search=@searchQuery">@i</a>
                            </li>
                        }
                        <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                            <a class="page-link" href="?page=@(currentPage + 1)&search=@searchQuery">Next</a>
                        </li>
                    </ul>
                </nav>
            </div>
        </div>

        <!-- Placeholder for partial view -->
        <div id="updatePanelContainer"></div>




    </div>

    <partial name="PartialViews/_AddProjectMembersPartialView" model="new InserProjecttMembersVM()" />

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <script>
        const ProjId = @ProjId;
    </script>

    <script>
            $(document).ready(function () {
                let currentPage = 1;
                const pageSize = 5;

                // Function to load members via AJAX
                function loadMembers(page, search = '') {
                    $.ajax({
                        url: '/Member/Index',
                        type: 'GET',
                        data: { page: page, search: search, pageSize: pageSize },
                        success: function (response) {
                            updateTable(response.data || response); // Handle both JSON and direct model
                            updatePagination(response.totalItems || @Model.Count, page);
                        },
                        error: function () {
                            toastr.error('Failed to load members');
                        }
                    });
                }


              

                $(document).on("click", ".toggle-menu", function (e) {
                    e.stopPropagation();
                    var $menu = $(this).siblings(".action-menu");
                    $(".action-menu").not($menu).hide();
                    $menu.toggle();
                });

                $(document).on("click", function (e) {
                    if (!$(e.target).closest(".action-btn").length) {
                        $(".action-menu").hide();
                    }
                });

                 $(document).on("click", ".member-row", function (e) {
            if (!hasAdminAccess) return;

            if (!$(e.target).closest(".toggle-menu, .delete-btn").length) {
                $(".member-row").removeClass("active");
                $(this).addClass("active");
                var memberId = $(this).data("id");

                $.ajax({
                    url: "/ProjectMembers/GetUpdatePartial/" + memberId + "?projectId=" + ProjId,
                    type: "GET",
                    success: function (partialViewHtml) {
                        $("#updatePanelContainer").html(partialViewHtml);
                        $("#memberDetailsPanel").addClass("show");
                    },
                    error: function (xhr, status, error) {
                        console.log("Error:", xhr, status, error);
                        toastr.error("Failed to load member update view.");
                    }
                });
            }
        });


                $(document).on("click", "#closePanel", function () {
                    $("#memberDetailsPanel").removeClass("show");
                });

                       $(document).on("click", "#updateMemberBtn", function (e) {
                e.preventDefault();

                var memberId = $(".member-row.active").data("id");

                if (!memberId) {
                    toastr.error("Please select a member to update");
                    return;
                }

                var member = {
                    email: $("#memberEmail").val(),
                    roleId: $("#memberRole").val() || null,
                    companyId: $("#memberCompany").val() || null,
                    positionID: $("#memberRole").val() || null,
                    projectAccessLevelID: $("#memberAccessLevel").val() || null,

                };

                console.log("Sending memberData:", JSON.stringify(member));

                 $.ajax({
                        url: "/ProjectMembers/Update/" + memberId + "?ProjectId=" + ProjId,
                        type: "POST",
                        contentType: "application/json",
                        data: JSON.stringify(member),
                        success: function (response) {
                            if (response.success) {
                                location.reload();
                                toastr.success("Member updated successfully");
                            }
                        },
                        error: function (xhr) {
                            if (xhr.status === 400) {
                                var errors = xhr.responseJSON.errors || {};
                                var errorMessages = [];
                                for (var key in errors) {
                                    if (errors.hasOwnProperty(key)) {
                                        errorMessages.push(errors[key]);
                                    }
                                }
                                $("#validationErrors").html(errorMessages.join("<br>")).show();
                            } else {
                                toastr.error("Failed to update member");
                            }
                        }
                    });
            });


                        $(document).on("click", ".delete-btn", function (e) {
                e.preventDefault();
                e.stopPropagation();

                var memberId = $(this).data("id");
                var projectId = $(this).data("projectid");

                // Optional: تأكيد الحذف باستخدام confirm
                if (!confirm("Are you sure you want to delete this member?")) {
                    return;
                }

                $(this).closest(".action-menu").hide();

                $.ajax({
                    url: "/ProjectMembers/Delete/" + memberId,
                    type: "POST",
                    data: { ProjectId: projectId },
                    success: function () {
                        $("#row-" + memberId).remove();
                        toastr.success("Member deleted successfully!");
                        $("#memberDetailsPanel").removeClass("show");
                    },
                    error: function () {
                        toastr.error("Failed to delete member.");
                    }
                });
            });

            });
    </script>
</body>
</html>